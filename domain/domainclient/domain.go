// Code generated by goctl. DO NOT EDIT.
// Source: domain.proto

package domainclient

import (
	"context"

	"zerorpc_demo/domain/rpc/types/domain"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DomainInfo     = domain.DomainInfo
	DomainInfoResp = domain.DomainInfoResp
	DomainReq      = domain.DomainReq

	Domain interface {
		GetDomainAll(ctx context.Context, in *DomainReq, opts ...grpc.CallOption) (*DomainInfoResp, error)
	}

	defaultDomain struct {
		cli zrpc.Client
	}
)

func NewDomain(cli zrpc.Client) Domain {
	return &defaultDomain{
		cli: cli,
	}
}

func (m *defaultDomain) GetDomainAll(ctx context.Context, in *DomainReq, opts ...grpc.CallOption) (*DomainInfoResp, error) {
	client := domain.NewDomainClient(m.cli.Conn())
	return client.GetDomainAll(ctx, in, opts...)
}
